options{  JDK_VERSION = "1.8";  static = false;}PARSER_BEGIN(Parser)package calculator;import java.util.function.DoubleBinaryOperator;public class Parser{}PARSER_END(Parser)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN :{  < PLUS : "+" >| < MINUS : "-" >| < MULTIPLY : "*" >| < DIVIDE : "/" >}TOKEN :{  < CONSTANT : (< DIGIT >)+ ("." < DIGIT >)? >| < #DIGIT : [ "0"-"9" ] >}double expr() :{  double a, b;  String op;}{  a = term()  (    (      < PLUS >    | < MINUS >    )    {      op = token.image;    }    b = term()    {      if (op.equals("+")) a += b;      else if (op.equals("-")) a -= b;    }  )*  {    return a;  }}double term() :{  double a, b;  String op;}{  a = unary()  (    (      < MULTIPLY >    | < DIVIDE >    )    {      op = token.image;    }    b = unary()    {      if (op.equals("*")) a *= b;      else if (op.equals("/")) a /= b;    }  )*  {    return a;  }}double unary() :{  double num;}{  < MINUS > num = element()  {    return - num;  }| num = element()  {    return num;  }}double element() :{  double a;}{  < CONSTANT >  {    return Double.parseDouble(token.image);  }| "(" a = expr() ")"  {    return a;  }}
